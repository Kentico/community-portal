name: "Deploy to SaaS: QA"

on:
  workflow_dispatch:
    inputs:
      reason:
        description: "The reason for running the workflow"
        required: true
        default: "Manual run"
      environment:
        description: "Target environment for deployment"
        required: false
        default: "qa"
        type: choice
        options:
          - qa
          - uat
          - prod

jobs:
  createDeploymentPackage:
    name: Create SaaS Deployment Package
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh

    env:
      ASPNETCORE_ENVIRONMENT: CI
      NODE_VERSION: ""
      DATABASE_BACKUP_FILENAME: ""
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: 1
      PROJECT_NAME: Kentico.Community.Portal.Web

    steps:
      - uses: actions/checkout@v4

      - name: "Install Node.js from package.json version"
        uses: actions/setup-node@v4
        with:
          node-version-file: "src/Kentico.Community.Portal.Web/package.json"

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Install dependencies
        run: dotnet restore --locked-mode

      - name: Build Solution
        run: |
          dotnet build ./src/${{ env.PROJECT_NAME }}/ `
            -c Release `
            --no-restore

      - name: Get Database Backup Name
        run: |
          $latestBackup = Get-ChildItem -Path "./database" -Filter "*.zip" | Select-Object -ExpandProperty BaseName
          "DATABASE_BACKUP_FILENAME=$latestBackup" >> $env:GITHUB_ENV

      - name: Extract Database Backup
        run: |
          Expand-Archive `
            -Path "./database/${{ env.DATABASE_BACKUP_FILENAME }}.zip" `
            -DestinationPath "./database"

      - name: Install a SQL Server suite of tools (SQLEngine, SQLPackage)
        uses: potatoqualitee/mssqlsuite@v1.8 # set as a commit hash for security
        with:
          install: sqlpackage, sqlengine, sqlclient
          sa-password: Pass@12345
          version: 2022

      - name: Restore Database .bak
        run: |
          docker cp "./database/${{ env.DATABASE_BACKUP_FILENAME }}" sql:/var/backups/Kentico.Community.bak
          docker exec -u root sql bash -c "chown mssql:mssql /var/backups/Kentico.Community.bak"
          docker exec -u root sql bash -c "chmod 644 /var/backups/Kentico.Community.bak"

          sqlcmd `
            -S localhost `
            -d master `
            -U "sa" `
            -P "Pass@12345" `
            -N o `
            -C `
            -i ./database/backup-restore.sql

      - name: Restore License Key
        working-directory: "./scripts"
        run: |
          ./Restore-LicenseKey.ps1 -LicenseKey ${{ secrets.XPERIENCE_LICENSE_KEY }}

      - name: Restore CI Repository
        working-directory: "./scripts"
        run: |
          ./Restore-CI.ps1

      - name: Generate Deployment Package
        working-directory: "./scripts"
        run: |
          ./Export-DeploymentPackage.ps1

      - name: Upload Deployment Package
        run: |
          $headers = @{ Authorization = "Bearer ${{ secrets.XPERIENCE_PORTAL_DEPLOYMENT_PAT }}" }
          Invoke-RestMethod `
            -Uri https://xperience-portal.com/api/deployment/upload/${{ secrets.XPERIENCE_PORTAL_PROJECT_GUID }}/${{ inputs.environment }} `
            -Method Post `
            -InFile './DeploymentPackage.zip' `
            -ContentType "application/zip" `
            -Headers $headers
