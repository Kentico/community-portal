@using Kentico.Community.Portal.Web.Features.Members
@using Kentico.Community.Portal.Web.Features.Accounts
@using Newtonsoft.Json

@model BadgesFormViewModel

@{
    int maxBadges = BadgesFormViewModel.MAX_SELECTED_BADGES;
    var badges = Model.Badges;
}

<form id="badgesUpdateForm" method="post" hx-post hx-controller="Account" hx-action="UpdateSelectedBadges"
    hx-swap="outerHTML" hx-disabled-elt="find fieldset"
    x-data="{ selectedCount: @JSEncoder.EncodeToJson(badges.Count(x => x.IsSelected)), maxBadges: @maxBadges }">

    <fieldset hx-indicator="this">
        <h5>My badges</h5>
        <div class="form-group">
            <span class="d-inline-flex wrap gap-2 mt-1 flex-wrap">
                @for (int i = 0; i < badges.Count; i++)
                {
                    var badge = badges[i];
                    string style = badge.IsSelected ? "" : "--bs-border-opacity: .5;";
                    string classes = badge.IsSelected ? "text-bg-purple-300 bg-purple-300" : "text-bg-white bg-white";
                    var alpineState = JSEncoder.EncodeToJson(new { selected = badge.IsSelected });

                    <button id="badgeButton_@i" type="button"
                        class="badge text-bg-purple-300 d-flex align-items-center gap-1 fw-medium px-2 border-secondary @classes"
                        style='@style' x-data='@alpineState'
                        :class="selected ? { 'text-bg-purple-300': true, 'bg-purple-300': true, 'text-bg-white': false, 'bg-white': false } : 'text-bg-white bg-white'"
                        :style="selected ? '' : '--bs-border-opacity: .5;'"
                        :title="selected ? 'This badge is selected' : 'This badge is not selected'"
                        :aria-label="selected ? 'This badge is selected' : 'This badge is not selected'"
                        @@click = "selected = !selected; selectedCount += selected ? 1 : -1" >

                        <img xpc-badge="@badge" />

                        @badge.MemberBadgeDisplayName
                        <input type="hidden" id="Badges_@(i)__BadgeId" name="Badges[@i].BadgeId" value="@badge.BadgeId" />
                        <input type="hidden" x-model="selected" id="Badges_@(i)__IsSelected" name="Badges[@i].IsSelected"
                            value="@badge.IsSelected" />
                    </button>
                }
            </span>
            <span class="text-danger field-validation-error field-validation-valid" x-show="selectedCount > maxBadges"
                x-cloak>
                Too many badges selected
            </span>
        </div>

        <p class="d-flex justify-content-between mt-3 align-items-center gap-3">
            <button id="updateBadges" type="submit" class="btn btn-primary" :disabled="selectedCount > maxBadges"
                xpc-loading-button>
                Update badges
            </button>

            <small>Select up to @maxBadges badges which will be shown next to your name in the portal.</small>
        </p>
    </fieldset>

    @if (Context.Request.IsHtmx() && ViewContext.ModelState.IsValid)
    {
        <xpc-alert dismissable="true">
            Selected badges updated.
        </xpc-alert>
    }
</form>
