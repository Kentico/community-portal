@using Kentico.Community.Portal.Web.Features.QAndA

@model QAndAPostAnswerViewModel

@{
    var guid = $"{Model.GUID:N}";
    string wrapperElId = $"answer_{guid}";
    string markAnswerFormElId = $"markAsAnswerForm_{guid}";
    string acceptedAnswerStyles = Model.IsAcceptedAnswer
    ? "success"
    : "bordered";
}

<div id="@wrapperElId" class="my-3" q-and-a-answer style="--bg-target: var(--bs-purple-100)"
    data-accepted="@JSEncoder.EncodeToJson(Model.IsAcceptedAnswer)" data-created="@Model.DateCreated.Ticks">
    <div class="c-card @acceptedAnswerStyles default-border">
        <div class="c-card_inner">

            <div class="c-card_content">

                <div class="mb-3 d-flex justify-content-between" data-ktc-search-exclude>
                    <vc:author author="Model.Author" />

                    <div>
                        <span class="text-nowrap">@Model.DateCreated.ToString("yyyy/MM/dd")
                            @Model.DateCreated.ToString("t") <a href="#@wrapperElId" class="answer-link"
                                title="Navigate to this answer" aria-label="Navigate to this answer"></a></span>

                        @if (Model.IsAcceptedAnswer)
                        {
                            <div class="c-card_icon text-success text-end">
                                <svg class="c-icon mt-1">
                                    <use xlink:href="/img/icons.svg#check" asp-append-version></use>
                                </svg>
                                <span class="fs-6">
                                    <strong>Accepted answer</strong>
                                </span>
                            </div>
                        }
                    </div>

                </div>

                <div class="member-generated-content overflow-auto" hx-disable>
                    @Model.HTMLSanitizedContentHTML
                </div>
            </div>

            @if (Model.Permissions.CanInteract)
            {
                <div class="d-flex gap-1 mt-2 justify-content-end">
                    @if (Model.Permissions.MarkApprovedAnswer)
                    {
                        <form id="@markAnswerFormElId" method="post" hx-post hx-controller="QAndAAnswer"
                            hx-action="MarkApprovedAnswer" hx-route-questionID="@Model.ParentQuestionID"
                            hx-route-answerID="@Model.ID" class="align-self-center">
                            <button type="submit" class="btn btn-outline-primary btn-sm text-wrap"
                                title="This response will be marked as the accepted response. You can only do this once.">
                                Mark as answer
                            </button>
                        </form>
                    }

                    @if (Model.Permissions.Edit)
                    {
                        <button type="button" class="btn btn-sm btn-outline-secondary" hx-get hx-controller="QAndAAnswer"
                            hx-action="DisplayEditAnswerForm" hx-route-questionID="@Model.ParentQuestionID"
                            hx-route-answerID="@Model.ID" hx-swap="outerHTML" hx-target="#@wrapperElId">
                            Edit
                        </button>
                    }
                    @if (Model.Permissions.Delete)
                    {
                        <form method="post" hx-post hx-controller="QAndAAnswer" hx-action="DeleteAnswer"
                            hx-route-questionID="@Model.ParentQuestionID" hx-route-answerID="@Model.ID" hx-swap="delete"
                            hx-confirm="Do you want to delete this answer?" hx-target="#@wrapperElId">
                            <button type="submit" class="btn btn-sm btn-outline-danger">Delete</button>
                        </form>
                    }
                </div>
            }
        </div>
    </div>
</div>

@{
    if (Context.Request.IsHtmx())
    {
        <script type="module">
            const el = document.querySelector('#@wrapperElId');
            window.Prism.highlightAllUnder(el);
        </script>
    }
}