@using Kentico.Forms.Web.Mvc
@using Kentico.Forms.Web.Mvc.Internal
@using Kentico.Community.Portal.Web.Components.FormBuilder

@model HiddenInputComponent

@using Kentico.Community.Portal.Web.Infrastructure

@inject IFormBuilderContext FormBuilderContext

@{
    var htmlAttributes = ViewData.Kentico().GetEditorHtmlAttributes();
}

@if (Model.FormBuilderMode == FormBuilderMode.Live)
{
    Model.Value = Model.Properties.HiddenInputValueSourceParsed switch
    {
        HiddenInputValueSources.WebPageID => Model.GetWebPageID().ToString(),
        HiddenInputValueSources.ChannelID => Model.GetChannelID().ToString(),
        HiddenInputValueSources.QueryStringValue => Model.GetQueryStringValue(),
        HiddenInputValueSources.WebPageURL => Model.GetRequestURL(),
        HiddenInputValueSources.DefaultValue
        or HiddenInputValueSources.CookieValue
        or _ => Model.Value
    };

    @Html.HiddenFor(m => m.Value, htmlAttributes)

    return;
}

@{
    htmlAttributes["disabled"] = "disabled";
}
@Html.TextBoxFor(x => x.Value, null, htmlAttributes)

@if (Model.FormBuilderMode == FormBuilderMode.BuilderEditor || Model.FormBuilderMode == FormBuilderMode.ValueEditor)
{
    <div class="ktc-explanation-text">Data source: @Model.AdminDescription().</div>
}
