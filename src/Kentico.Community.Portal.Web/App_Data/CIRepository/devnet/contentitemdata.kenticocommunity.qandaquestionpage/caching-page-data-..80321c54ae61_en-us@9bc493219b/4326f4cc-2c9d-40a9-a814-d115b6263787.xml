<?xml version="1.0" encoding="utf-8"?>
<contentitemdata.kenticocommunity.qandaquestionpage>
  <ContentItemDataCommonDataID>
    <GUID>5a8dd657-4f45-4637-8ac6-80321c54ae61</GUID>
    <ObjectType>cms.contentitemcommondata</ObjectType>
    <Parent>
      <CodeName>Caching-page-data-for-preview-mode-dd4d82f4-2d83pyo0</CodeName>
      <GUID>8a113459-0a78-45e0-8314-8dd4466aa5a3</GUID>
      <ObjectType>cms.contentitem</ObjectType>
    </Parent>
  </ContentItemDataCommonDataID>
  <ContentItemDataGUID>4326f4cc-2c9d-40a9-a814-d115b6263787</ContentItemDataGUID>
  <QAndAQuestionPageAcceptedAnswerDataGUID>d5d5907d-9f71-4464-950f-37d3fb006c07</QAndAQuestionPageAcceptedAnswerDataGUID>
  <QAndAQuestionPageAuthorMemberID>1</QAndAQuestionPageAuthorMemberID>
  <QAndAQuestionPageContent><![CDATA[
We found an issue where the 'preview' mode for pages wasn't showing the most recent data. Looked into it and found it was an issue with the caching only clearing when changes were published rather than saved.

I added in the 'allstates' prefix to the cache key to resolve this but it now means the cache on the live site is also clearing when something is saved rather than published.

Example of how we're caching below:
		
		return await ProgressiveCache.LoadAsync(async (cs) =>
    {
        cs.CacheDependency = CacheHelper.GetCacheDependency($"webpageitem|allstates|byid|{webPageItemID}")
		var queryBuilder = new ContentItemQueryBuilder()
            .ForContentType(NewsPage.CONTENT_TYPE_NAME, queryParameters => queryParameters
                .ForWebsite(WebsiteChannelContext.WebsiteChannelName)
                .WithLinkedItems(1)
                .Where(w => w.WhereEquals(nameof(WebPageFields.WebPageItemID), webPageItemID))
                .TopN(1)
            );
        var pages = await Executor.GetWebPageResult(queryBuilder, WebPageMapper.Map<NewsPage>, new ContentQueryExecutionOptions { ForPreview = WebsiteChannelContext.IsPreview, IncludeSecuredItems = false }).ConfigureAwait(false);

        return pages.FirstOrDefault();
    },
    new CacheSettings(1440, WebsiteChannelContext.WebsiteChannelName, nameof(NewsRepository), nameof(GetNewsPageAsync), $"PageID-{webPageItemID}", $"Preview-{WebsiteChannelContext.IsPreview}")).ConfigureAwait(false);
	

Is there another recomended way of handling caching so that the live site cache only refreshes when a change is published, but the cache for the preview mode updates whenever something is saved?

---

**Environment**
- Xperience by Kentico version: [29.3.1]
- .NET version: [8]
- Link to relevant [Xperience by Kentico documentation](https://docs.kentico.com)
]]></QAndAQuestionPageContent>
  <QAndAQuestionPageDateCreated>2024-08-28 14:25:13Z</QAndAQuestionPageDateCreated>
  <QAndAQuestionPageDateModified>2024-08-28 14:25:13Z</QAndAQuestionPageDateModified>
  <QAndAQuestionPageDiscussionType><![CDATA[[{"Identifier":"c50e7dd3-2b8e-47b5-96ee-3f04ccfde8b6"}]]]></QAndAQuestionPageDiscussionType>
  <QAndAQuestionPageTitle>Caching page data for preview mode</QAndAQuestionPageTitle>
</contentitemdata.kenticocommunity.qandaquestionpage>