<?xml version="1.0" encoding="utf-8"?>
<contentitemdata.kenticocommunity.qandaquestionpage>
  <ContentItemDataCommonDataID>
    <GUID>8a032b1f-8eb7-44fe-aad2-f238cde43967</GUID>
    <ObjectType>cms.contentitemcommondata</ObjectType>
    <Parent>
      <CodeName>Custom-Module-Initialization-8aa850f0-rgnrmgrc</CodeName>
      <GUID>29be8b32-4078-4146-b911-35ec270faa53</GUID>
      <ObjectType>cms.contentitem</ObjectType>
    </Parent>
  </ContentItemDataCommonDataID>
  <ContentItemDataGUID>4493916f-4c66-43b2-b8db-17bd7ff126e9</ContentItemDataGUID>
  <QAndAQuestionPageAcceptedAnswerDataGUID>c23d8754-e34a-449c-b523-e504add057b7</QAndAQuestionPageAcceptedAnswerDataGUID>
  <QAndAQuestionPageAuthorMemberID>7</QAndAQuestionPageAuthorMemberID>
  <QAndAQuestionPageContent>
<![CDATA[
I've created a custom module to seed a new application with non-Kentico legacy data. The application is throwing the following error on build while debugging.  I am compiling to a package which will be removed after soon after the production release. The error is thrown at the .AddKentico middleware.

```
Cannot dynamically create an instance of type 'Custom.Admin.SeedModule'. Reason: No parameterless constructor defined. 

   at System.RuntimeType.ActivatorCache..ctor(RuntimeType rt)
   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)
   at CMS.Core.ModuleDiscovery.<>c.<GetModules>b__1_0(RegisterModuleAttribute attribute)
   at System.Linq.Enumerable.SelectArrayIterator`2.MoveNext()
   at System.Collections.Generic.List`1.AddRange(IEnumerable`1 collection)
   at CMS.Core.ModuleDiscovery.GetModules()
   at CMS.Core.ModuleEntryManager.GetDiscoverableModules()
   at CMS.Core.ModuleEntryManager.ModuleCollectionsInitialization()
   at CMS.Core.ModuleEntryManager.PreInit()
   at CMS.Core.AppCore.PreInit()
   at CMS.DataEngine.CMSApplication.PreInit(Boolean initializeContainer)
   at Kentico.Web.Mvc.IServiceCollectionExtensions.PreInitCmsApplication()
   at Kentico.Web.Mvc.IServiceCollectionExtensions.AddKenticoCore(IServiceCollection services)
   at Kentico.Web.Mvc.StartupExtensions.AddKentico(IServiceCollection services, Action`1 featuresBuilder)
   at <CLASS>.Domain.SiteExtensions.ServiceCollections.AddKenticoServices(IServiceCollection services, WebApplicationBuilder builder) in C:\<PATH>\ServiceCollections.cs:line 49
   at Program.<Main>$(String[] args) in C:\<PATH>\Program.cs:line 36
```

***

```CSharp
  // ServiceCollection

        services.AddKentico(features =>
        {
            features.UsePageBuilder(new PageBuilderOptions
            {
                //ContentTypeNames = new[]
                //{
                //    ...
                //}
            });
            features.UseActivityTracking();
            features.UseWebPageRouting();
            features.UseEmailStatisticsLogging();
            features.UseEmailMarketing();
        });

//Custom Class Module
  [assembly: AssemblyDiscoverable]
  [assembly: RegisterModule(typeof(SeedModule))]
  namespace Custom.Admin;
  public class SeedModule : Module

//Current Constructor
  public SeedModule(string moduleName) : base(nameof(SeedModule)) {}

//OnInit
  protected override void OnInit()
  {
    base.OnInit();
    Service.Resolve<IEventLogService>().LogInformation("SEED_MODULE", "ORS", "Seed Module initialized");
  }

```



**Environment**

* Xperience by Kentico version: \[30.0.1]
* .NET version: \[8]
* Execution environment: \[Private cloud (AWS/Localhost)]
* Link to relevant [Xperience by Kentico documentation](https://docs.kentico.com)
]]>
  </QAndAQuestionPageContent>
  <QAndAQuestionPageDateCreated>2025-02-11 20:56:28Z</QAndAQuestionPageDateCreated>
  <QAndAQuestionPageDateModified>2025-02-11 20:56:28Z</QAndAQuestionPageDateModified>
  <QAndAQuestionPageDiscussionType>
    <![CDATA[[{"Identifier":"c50e7dd3-2b8e-47b5-96ee-3f04ccfde8b6"}]]]>
  </QAndAQuestionPageDiscussionType>
</contentitemdata.kenticocommunity.qandaquestionpage>