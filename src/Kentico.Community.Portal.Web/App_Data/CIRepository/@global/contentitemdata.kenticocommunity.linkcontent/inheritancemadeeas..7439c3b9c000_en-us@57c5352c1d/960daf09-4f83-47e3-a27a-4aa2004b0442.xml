<?xml version="1.0" encoding="utf-8"?>
<contentitemdata.kenticocommunity.linkcontent>
  <ContentItemDataCommonDataID>
    <GUID>2d26384e-ec22-41ad-8395-7439c3b9c000</GUID>
    <ObjectType>cms.contentitemcommondata</ObjectType>
    <Parent>
      <CodeName>InheritanceMadeEasyWithReusableFieldSchemasInXperienceByKentico-sgdp0v9n</CodeName>
      <GUID>7bff7831-3498-4777-84db-78924344bcac</GUID>
      <ObjectType>cms.contentitem</ObjectType>
    </Parent>
  </ContentItemDataCommonDataID>
  <ContentItemDataGUID>960daf09-4f83-47e3-a27a-4aa2004b0442</ContentItemDataGUID>
  <LinkContentLabel>
    <![CDATA[Inheritance made easy with Reusable Field Schemas in Xperience by Kentico]]>
  </LinkContentLabel>
  <LinkContentLinkType>CommunityContribution</LinkContentLinkType>
  <LinkContentPathOrURL>
    <![CDATA[https://web-dev-stories.de/xperience-by-kentico/vererbung-leicht-gemacht-mit-reusable-field-schemas-in-xperience-by-kentico/]]>
  </LinkContentPathOrURL>
  <LinkContentPublishedDate>2024-05-15 04:00:00Z</LinkContentPublishedDate>
  <LinkContentShortDescription>
    <![CDATA[Kentico MVP Elmar Höfinghoff explains why Xperience by Kentico's Resuable Field Schemas (RFS) are more flexible than content type "inheritance", some common use cases for RFS, and how to generate C# types to use RFSs in your Xperience code base. (The article is originally in German, but you can use ChatGPT or your browser to translate it for you 😀)]]>
  </LinkContentShortDescription>
</contentitemdata.kenticocommunity.linkcontent>