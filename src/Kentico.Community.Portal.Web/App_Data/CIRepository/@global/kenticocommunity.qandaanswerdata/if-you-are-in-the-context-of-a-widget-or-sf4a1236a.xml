<?xml version="1.0" encoding="utf-8"?>
<kenticocommunity.qandaanswerdata>
  <QAndAAnswerDataAuthorMemberID>
    <GUID>b63e360d-4b76-4418-a8a7-affd51730462</GUID>
    <ObjectType>cms.member</ObjectType>
  </QAndAAnswerDataAuthorMemberID>
  <QAndAAnswerDataCodeName>If-you-are-in-the-context-of-a-widget-or-sf4a1236a</QAndAAnswerDataCodeName>
  <QAndAAnswerDataContent>
<![CDATA[
If you are in the context of a widget or section, you can use the [ComponentViewModel<T>.Page](https://docs.kentico.com/developers-and-admins/development/builders/page-builder/widgets-for-page-builder#widgets-based-on-a-view-component) property and use its `WebPageItemID` to retrieve the web page using a `ContentItemQueryBuilder()`.

(Using `ComponentViewModel<T>.Page` means you don't need to inject `IWebPageDataContextRetriever`).

Then execute the query and limit yourself to the fields you need.

```csharp
var b = new ContentItemQueryBuilder()
    .ForContentTypes(q => q.ForWebsite([page.WebPageItemID]))
	.Parameters(q => q.Columns("...")); // limit columns as an optimization

var contentItem = (await Executor.GetMappedResult<IContentItemFieldsSource>(b).FirstOrDefault();
```

Finally, use the content item's fields to get the correct common data record.

```csharp
var commonData = (await commonDataInfoProvider
	.Get()
	.WhereEquals(
	    nameof(ContentItemCommonDataInfo.ContentItemCommonDataContentItemID),
		contentItem.SystemFields.ContentItemID)
	.WhereEquals(
	    nameof(ContentItemCommonDataInfo.ContentItemCommonDataContentLanguageID),
		contentItem.SystemFields.ContentItemCommonDataContentLanguageID)
	.GetEnumerableTypedResultAsync())
	.FirstOrDefault();
```

Is your sidebar navigation dynamically built from the Widgets rendered on the page?

---

How will that work with personalization? Personalization will pick the variant of a Widget based on the contact details and the priority of [variants of the widget](https://docs.kentico.com/x/p4PWCQ) but without replicating that logic, your sidebar navigation could display links that don't match the displayed content.

This almost seems to me to be an ok place to render something client side based on what is actually in the DOM (using vanilla JS, [AlpineJS](https://alpinejs.dev), or jQuery). If the navigation is outside of the main content flow you won't need to worry about [cumulative layout shift](https://web.dev/articles/cls) from client-side rendering.
]]>
  </QAndAAnswerDataContent>
  <QAndAAnswerDataDateCreated>2024-10-07 16:08:29Z</QAndAAnswerDataDateCreated>
  <QAndAAnswerDataGUID>571f9b22-7077-4b57-9172-cffa5626b2dc</QAndAAnswerDataGUID>
  <QAndAAnswerDataQuestionWebPageItemID>
    <CodeName>Get-ContentItemDataCommonDataID-from-Pages-84c73291-i7nb8k2q</CodeName>
    <GUID>4afb7cdb-d9ae-47f0-8e8e-e8ec672b1946</GUID>
    <ObjectType>cms.webpageitem</ObjectType>
  </QAndAAnswerDataQuestionWebPageItemID>
  <QAndAAnswerDataWebsiteChannelID>
    <GUID>9ca57e0f-969f-43be-91d3-6c45659316bd</GUID>
    <ObjectType>cms.websitechannel</ObjectType>
    <Parent>
      <CodeName>devnet</CodeName>
      <GUID>4f636110-fd4a-4905-83e6-998752c2b2c2</GUID>
      <ObjectType>cms.channel</ObjectType>
    </Parent>
  </QAndAAnswerDataWebsiteChannelID>
</kenticocommunity.qandaanswerdata>