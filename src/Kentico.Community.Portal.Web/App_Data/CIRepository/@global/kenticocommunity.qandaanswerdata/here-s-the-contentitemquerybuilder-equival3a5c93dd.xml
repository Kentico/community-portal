<?xml version="1.0" encoding="utf-8"?>
<kenticocommunity.qandaanswerdata>
  <QAndAAnswerDataAuthorMemberID>
    <GUID>f69d9d84-4ca9-4a3d-80f0-cff18438940a</GUID>
    <ObjectType>cms.member</ObjectType>
  </QAndAAnswerDataAuthorMemberID>
  <QAndAAnswerDataCodeName>Here-s-the-ContentItemQueryBuilder-equival3a5c93dd</QAndAAnswerDataCodeName>
  <QAndAAnswerDataContent><![CDATA[
Here's the `ContentItemQueryBuilder` equivalent (we build the query in several stages depending on the values present in the filter) :

```CSharp
new ContentItemQueryBuilder().ForContentType(ContentTypeName, q => q
.Where(w => w.WhereGreaterOrEquals(nameof(CalendarEvent.Start), filter.MinDate.Value.Date))
.Where(w => w.WhereLessOrEquals(nameof(CalendarEvent.Start), filter.MaxDate.Value.Date)));
```



At the query creation stage, here's how we apply the DateTime filter (`q` is a `ContentTypeQueryParameters` type) :

```CSharp
        if (MinDate.HasValue) q.Where(w => w.WhereGreaterOrEquals(DateColumnName, MinDate.Value.Date));
        if (MaxDate.HasValue) q.Where(w => w.WhereLessOrEquals(DateColumnName, MaxDate.Value.Date.AddDays(1).AddMilliseconds(-1)));
```
]]></QAndAAnswerDataContent>
  <QAndAAnswerDataDateCreated>2024-10-28 12:16:33Z</QAndAAnswerDataDateCreated>
  <QAndAAnswerDataGUID>e29ef1a6-af73-4abc-9eb7-46a9c31b766e</QAndAAnswerDataGUID>
  <QAndAAnswerDataQuestionWebPageItemID>
    <CodeName>Error-when-Retrieving-ContentType--b64b93db-gs44av4w</CodeName>
    <GUID>356c88f1-062f-4c8e-b04b-36c44992adea</GUID>
    <ObjectType>cms.webpageitem</ObjectType>
  </QAndAAnswerDataQuestionWebPageItemID>
  <QAndAAnswerDataWebsiteChannelID>
    <GUID>9ca57e0f-969f-43be-91d3-6c45659316bd</GUID>
    <ObjectType>cms.websitechannel</ObjectType>
    <Parent>
      <CodeName>devnet</CodeName>
      <GUID>4f636110-fd4a-4905-83e6-998752c2b2c2</GUID>
      <ObjectType>cms.channel</ObjectType>
    </Parent>
  </QAndAAnswerDataWebsiteChannelID>
</kenticocommunity.qandaanswerdata>