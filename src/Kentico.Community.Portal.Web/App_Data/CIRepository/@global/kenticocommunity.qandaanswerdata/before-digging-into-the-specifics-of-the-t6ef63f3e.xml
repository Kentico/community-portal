<?xml version="1.0" encoding="utf-8"?>
<kenticocommunity.qandaanswerdata>
  <QAndAAnswerDataAuthorMemberID>
    <GUID>f69d9d84-4ca9-4a3d-80f0-cff18438940a</GUID>
    <ObjectType>cms.member</ObjectType>
  </QAndAAnswerDataAuthorMemberID>
  <QAndAAnswerDataCodeName>Before-digging-into-the-specifics-of-the-t6ef63f3e</QAndAAnswerDataCodeName>
  <QAndAAnswerDataContent><![CDATA[
Before digging into the specifics of the type of query you are trying to execute, I recommend exploring the content query API with a demo project, using the [`kentico-xperience-sample-mvc`](https://docs.kentico.com/developers-and-admins/installation) Dancing Goat sample app and combining that with our [MiniProfiler integration](https://github.com/Kentico/xperience-by-kentico-miniprofiler).

The benefit of this setup for query exploration is
1. You already have a standard set of content types and data to try querying against
1. MiniProfiler will show the SQL executed to render a page

You can set up a custom `_Layout_Custom.cshtml` with no styling or content that needs querying, create a Page Template or Razor view that references this layout, and then execute your test query in the Controller action that renders this page.

You should see very few queries in the MiniProfiler UI except for the query you are testing, making it easy to explore the API and iterate.

If you want to see more query examples "in action", check out the [Kentico Community Portal project on GitHub](https://github.com/Kentico/community-portal/blob/v29.4.1.3/src/Kentico.Community.Portal.Web/Features/Blog/Operations/BlogPostsByTaxonomyQuery.cs).
]]></QAndAAnswerDataContent>
  <QAndAAnswerDataDateCreated>2024-09-20 17:56:11Z</QAndAAnswerDataDateCreated>
  <QAndAAnswerDataGUID>b68adc66-541c-4a2f-8aad-2b7298d62e1d</QAndAAnswerDataGUID>
  <QAndAAnswerDataQuestionWebPageItemID>
    <CodeName>How-add-nested-where-conditions-in-ContentTypeQueryParameters-03bc6fb6-xoj36uw6</CodeName>
    <GUID>a2229ddc-2d0e-4cae-9cfa-a7f9350a570b</GUID>
    <ObjectType>cms.webpageitem</ObjectType>
  </QAndAAnswerDataQuestionWebPageItemID>
  <QAndAAnswerDataWebsiteChannelID>
    <GUID>9ca57e0f-969f-43be-91d3-6c45659316bd</GUID>
    <ObjectType>cms.websitechannel</ObjectType>
    <Parent>
      <CodeName>devnet</CodeName>
      <GUID>4f636110-fd4a-4905-83e6-998752c2b2c2</GUID>
      <ObjectType>cms.channel</ObjectType>
    </Parent>
  </QAndAAnswerDataWebsiteChannelID>
</kenticocommunity.qandaanswerdata>