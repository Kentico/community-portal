<?xml version="1.0" encoding="utf-8"?>
<kenticocommunity.qandaanswerdata>
  <QAndAAnswerDataAuthorMemberID>
    <GUID>46b28c7b-3654-4262-ae46-99cee1b97aa6</GUID>
    <ObjectType>cms.member</ObjectType>
  </QAndAAnswerDataAuthorMemberID>
  <QAndAAnswerDataCodeName>How-do-you-handle-scale-out-with-these-inded2a0b43</QAndAAnswerDataCodeName>
  <QAndAAnswerDataContent>
<![CDATA[
How do you handle scale-out with these indexes? I recall on a past K13 project running into the issue that a newly scaled server didn't have the Lucene indexes and wouldn't return search results. It think my solution was to listen for the global event that was fired when a new server was added to the web farm and kick off an index rebuild on that server.

My only other experience with using Lucene in a cloud environment was limited to the K13 media file usage index. That particular site was running in an Azure App Service, and there were specific instructions in the documentation to store those indexes in blob storage. It seemed to work fine, although the local Azure quickly filled with Lucene's temporary files. Would we need to make any sort of setting changes like that for Kentico's Saas?
]]>
  </QAndAAnswerDataContent>
  <QAndAAnswerDataDateCreated>2025-01-27 19:28:15Z</QAndAAnswerDataDateCreated>
  <QAndAAnswerDataGUID>cb10038c-1540-49a0-b7f7-d7818d691cab</QAndAAnswerDataGUID>
  <QAndAAnswerDataQuestionWebPageItemID>
    <CodeName>Search-in-Kentico-SaaS-0a93371d-jjsxhf3d</CodeName>
    <GUID>15667460-52bb-4578-99fd-d93d431309da</GUID>
    <ObjectType>cms.webpageitem</ObjectType>
  </QAndAAnswerDataQuestionWebPageItemID>
  <QAndAAnswerDataWebsiteChannelID>
    <GUID>9ca57e0f-969f-43be-91d3-6c45659316bd</GUID>
    <ObjectType>cms.websitechannel</ObjectType>
    <Parent>
      <CodeName>devnet</CodeName>
      <GUID>4f636110-fd4a-4905-83e6-998752c2b2c2</GUID>
      <ObjectType>cms.channel</ObjectType>
    </Parent>
  </QAndAAnswerDataWebsiteChannelID>
</kenticocommunity.qandaanswerdata>