<?xml version="1.0" encoding="utf-8"?>
<kenticocommunity.qandaanswerdata>
  <QAndAAnswerDataAuthorMemberID>
    <GUID>b63e360d-4b76-4418-a8a7-affd51730462</GUID>
    <ObjectType>cms.member</ObjectType>
  </QAndAAnswerDataAuthorMemberID>
  <QAndAAnswerDataCodeName>The-method-that-you-identified-is-throwing0209ca3d</QAndAAnswerDataCodeName>
  <QAndAAnswerDataContent><![CDATA[
The method that you identified is throwing the exception does the following:

```CSharp
var ids = provider.Get().Source(delegate (QuerySource source)
{
    source.InnerJoin<CMS.Websites.Internal.WebPageItemInfo>("ContentItemCommonDataContentItemID", "WebPageItemContentItemID");
}).WhereIn("WebPageItemID", webPageIds.ToList())
    .Column("ContentItemCommonDataID")
    .GetListResult<int>();
```

If `webPageIds` is `null`, has 0, 1, or more values it does not throw an exception, even if the identifiers are invalid `webPageIds`.

I tried to get `ILinkedItemsDependencyAsyncRetriever` and `IWebPageLinkedItemsDependencyAsyncRetriever` to throw exceptions by specifying only 1 value with the `IEnumerable<int>` method overload, but neither threw an exception.

I think the issue you are experiencing is caused by something else.
]]></QAndAAnswerDataContent>
  <QAndAAnswerDataDateCreated>2024-10-29 17:06:15Z</QAndAAnswerDataDateCreated>
  <QAndAAnswerDataGUID>eeddd48d-c91c-4636-a774-941f4c9100e3</QAndAAnswerDataGUID>
  <QAndAAnswerDataQuestionWebPageItemID>
    <CodeName>Error-when-Retrieving-ContentType--b64b93db-gs44av4w</CodeName>
    <GUID>356c88f1-062f-4c8e-b04b-36c44992adea</GUID>
    <ObjectType>cms.webpageitem</ObjectType>
  </QAndAAnswerDataQuestionWebPageItemID>
  <QAndAAnswerDataWebsiteChannelID>
    <GUID>9ca57e0f-969f-43be-91d3-6c45659316bd</GUID>
    <ObjectType>cms.websitechannel</ObjectType>
    <Parent>
      <CodeName>devnet</CodeName>
      <GUID>4f636110-fd4a-4905-83e6-998752c2b2c2</GUID>
      <ObjectType>cms.channel</ObjectType>
    </Parent>
  </QAndAAnswerDataWebsiteChannelID>
</kenticocommunity.qandaanswerdata>